---

  - name: Install meteor
    shell: curl https://install.meteor.com | /bin/sh chdir=/tmp creates=/usr/local/bin/meteor
    sudo: yes
    sudo_user: root

  - name: Copy grid source
    copy: src=grid/ dest={{ grid_prefix }}-source
    register: grid_copy

  - name: Remove grid-deploy directory
    file: path={{ grid_prefix }}-deploy state=absent
    when: grid_copy.changed

  # The source directory is kept separate so it doesn't appear to be changed
  # because of the subsequent processing
  - name: Copy grid source to deployment directory
    command: cp -r {{ grid_prefix }}-source {{ grid_prefix }}-deploy
    when: grid_copy.changed

  - name: Create config
    template: src=meteor_config.j2 dest={{ grid_prefix }}-deploy/config mode=0755

  - name: Remove bundle directory
    file: path={{ grid_prefix }}-deploy/bundle state=absent
    when: grid_copy.changed

  - name: meteor bundle
    command: meteor bundle bundle.tgz chdir={{ grid_prefix }}-deploy
    when: grid_copy.changed

  - name: Unarchive bundle
    unarchive: src={{ grid_prefix }}-deploy/bundle.tgz dest={{ grid_prefix }}-deploy copy=no
    when: grid_copy.changed

  - name: Install fibers by npm into bundle
    npm: name=fibers production=yes path={{ grid_prefix }}-deploy/bundle/programs/server
    when: grid_copy.changed

  - name: Install underscore by npm into bundle
    npm: name=underscore production=yes path={{ grid_prefix }}-deploy/bundle/programs/server
    when: grid_copy.changed

  - name: Install source-map-support by npm into bundle
    npm: name=source-map-support production=yes path={{ grid_prefix }}-deploy/bundle/programs/server
    when: grid_copy.changed

  - name: Install semver by npm into bundle
    npm: name=semver production=yes path={{ grid_prefix }}-deploy/bundle/programs/server
    when: grid_copy.changed

  - name: Install supervisord config
    template: src=gridd.conf.j2 dest=/etc/supervisor/conf.d/gridd.conf
    sudo: yes
    sudo_user: root
    notify: reload supervisor
    with_items:
      - grid

  - name: Copy grid scripts
    tags: [import]
    copy: src=grid/.scripts/ dest={{ grid_prefix }}-scripts

  - name: Create import config
    tags: [import]
    template: src=import_config.j2 dest={{ grid_prefix }}-scripts/config.py

  - name: Set up import python environment
    tags: [import]
    pip: requirements={{ grid_prefix }}-scripts/requirements.txt virtualenv={{ grid_prefix }}-scripts/env

  - name: Run import
    shell: "env/bin/python import_from_spreadsheets.py"
    tags: [import]
    args:
      chdir: "{{ grid_prefix }}-scripts"

  - name: Restart grid process
    supervisorctl: name="grid" state=restarted
    when: grid_copy.changed
    sudo: yes
    sudo_user: root
